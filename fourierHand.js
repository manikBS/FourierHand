function setup() {
  a= [] 
  drawMode = true
  button = createButton('Toggle DrawMode');
  button.position(700, 0);
  button.mousePressed(toggleDrawMode)
  /*var a=[[500,0],[500,125],[500,250],[500,375],[500,500],[375,500],[250,500],[125,500],[0,500],[0,375],[0,250],[0,125],[0,0],[125,0],[250,0],[375,0]]
  a=[[0,-200],[100,-100],[200,0],[100,100],[0,200],[-100,100],[-200,0],[-100,-100]]
  a=[[-636, 441], [-636, 441], [-636, 441], [-636, 441], [-636, 441], [-636, 441], [-636, 441], [-636, 441], [-636, 441], [-636, 441], [-636, 439], [-636, 435], [-636, 433], [-636, 426], [-636, 417], [-636, 408], [-636, 405], [-636, 401], [-636, 396], [-636, 387], [-634, 381], [-633, 374], [-633, 372], [-632, 367], [-632, 362], [-632, 360], [-631, 349], [-631, 342], [-629, 334], [-629, 332], [-629, 327], [-629, 323], [-629, 316], [-629, 308], [-629, 304], [-629, 298], [-629, 295], [-629, 294], [-629, 291], [-629, 287], [-629, 284], [-628, 278], [-628, 271], [-628, 265], [-628, 263], [-628, 259], [-628, 256], [-628, 254], [-628, 251], [-628, 248], [-628, 244], [-628, 241], [-628, 240], [-628, 239], [-628, 239], [-628, 239], [-628, 239], [-628, 239], [-628, 239], [-628, 239], [-628, 239], [-628, 240], [-628, 240], [-628, 241], [-628, 241], [-628, 242], [-628, 243], [-628, 244], [-628, 246], [-627, 247], [-627, 249], [-627, 250], [-627, 252], [-627, 256], [-627, 258], [-627, 258], [-627, 258], [-627, 260], [-627, 266], [-627, 270], [-627, 279], [-627, 285], [-627, 286], [-628, 292], [-630, 298], [-630, 302], [-630, 314], [-631, 322], [-631, 328], [-631, 334], [-631, 341], [-632, 345], [-632, 358], [-632, 365], [-632, 368], [-632, 372], [-632, 375], [-633, 379], [-634, 383], [-636, 390], [-638, 405], [-639, 411], [-640, 416], [-641, 418], [-642, 422], [-642, 429], [-644, 433], [-645, 438], [-645, 439], [-645, 439], [-645, 439], [-645, 439], [-645, 439], [-645, 439], [-645, 439], [-645, 439], [-645, 439], [-645, 439], [-643, 437], [-642, 432], [-641, 429], [-641, 426], [-639, 423], [-634, 418], [-630, 415], [-628, 414], [-622, 409], [-618, 402], [-615, 401], [-611, 395], [-608, 390], [-604, 385], [-603, 383], [-601, 381], [-598, 379], [-597, 378], [-592, 374], [-589, 372], [-587, 369], [-586, 366], [-583, 364], [-581, 363], [-581, 362], [-581, 362], [-580, 362], [-580, 363], [-579, 365], [-578, 367], [-578, 368], [-577, 372], [-569, 380], [-545, 398], [-536, 407], [-523, 426], [-495, 442], [-485, 446], [-478, 452], [-477, 453], [-477, 453], [-477, 453], [-477, 453], [-477, 453], [-477, 453], [-477, 453], [-477, 452], [-478, 452], [-479, 451], [-479, 450], [-480, 449], [-480, 449], [-480, 449], [-481, 448], [-481, 448], [-482, 447], [-482, 446], [-484, 444], [-485, 442], [-487, 430], [-488, 419], [-488, 412], [-488, 404], [-488, 397], [-489, 382], [-489, 368], [-489, 364], [-491, 357], [-491, 333], [-491, 321], [-491, 312], [-491, 302], [-491, 295], [-491, 284], [-492, 275], [-492, 266], [-492, 260], [-492, 258], [-492, 256], [-492, 256], [-492, 256], [-492, 256], [-492, 256], [-492, 256], [-492, 256], [-492, 256], [-492, 255], [-492, 254], [-492, 253], [-492, 253], [-492, 253], [-492, 253], [-492, 253], [-492, 253], [-492, 253], [-492, 253], [-492, 253], [-492, 254], [-492, 254], [-492, 255], [-492, 256], [-492, 256], [-492, 257], [-492, 257], [-492, 257], [-492, 257], [-492, 258], [-492, 258], [-492, 258], [-492, 258], [-492, 258], [-492, 258], [-492, 258], [-492, 258], [-492, 258], [-492, 258], [-492, 258], [-492, 258], [-492, 258], [-492, 258], [-492, 258], [-492, 259], [-458, 258], [-458, 258], [-457, 258], [-456, 258], [-455, 259], [-455, 259], [-454, 260], [-453, 263], [-452, 264], [-451, 271], [-445, 296], [-442, 318], [-439, 328], [-430, 348], [-427, 368], [-426, 373], [-424, 381], [-422, 387], [-421, 391], [-418, 400], [-417, 406], [-417, 407], [-417, 408], [-417, 408], [-417, 408], [-417, 408], [-417, 408], [-417, 408], [-417, 408], [-417, 408], [-417, 409], [-416, 411], [-414, 416], [-413, 422], [-410, 430], [-405, 458], [-404, 462], [-404, 462], [-404, 462], [-404, 461], [-404, 460], [-404, 458], [-404, 457], [-404, 454], [-404, 453], [-404, 448], [-404, 444], [-398, 432], [-395, 427], [-390, 400], [-386, 386], [-379, 365], [-375, 350], [-372, 334], [-370, 328], [-369, 326], [-368, 319], [-365, 312], [-364, 306], [-361, 297], [-358, 282], [-356, 271], [-356, 267], [-356, 265], [-355, 265], [-355, 265], [-355, 265], [-355, 265], [-355, 265], [-355, 265], [-355, 265], [-355, 265], [-355, 265], [-355, 265], [-355, 265], [-354, 265], [-354, 265], [-354, 266], [-354, 266], [-354, 267], [-354, 267], [-428, 332], [-428, 332], [-428, 333], [-427, 333], [-425, 334], [-423, 335], [-421, 335], [-419, 335], [-411, 333], [-408, 332], [-406, 332], [-405, 332], [-403, 332], [-400, 332], [-398, 332], [-395, 332], [-394, 330], [-393, 330], [-393, 330], [-392, 330], [-386, 330], [-383, 330], [-381, 330], [-380, 330], [-380, 330], [-379, 330], [-379, 330], [-379, 330], [-379, 330], [-379, 330], [-379, 330], [-319, 273], [-319, 273], [-319, 273], [-319, 273], [-319, 274], [-319, 275], [-320, 278], [-320, 280], [-320, 286], [-320, 296], [-322, 302], [-322, 316], [-322, 331], [-322, 345], [-321, 362], [-320, 379], [-318, 386], [-316, 406], [-312, 421], [-312, 430], [-312, 437], [-312, 443], [-312, 451], [-310, 454], [-310, 458], [-310, 462], [-310, 464], [-311, 470], [-312, 473], [-312, 473], [-312, 473], [-312, 473], [-313, 473], [-313, 473], [-313, 472], [-313, 472], [-313, 470], [-312, 468], [-311, 467], [-308, 464], [-293, 443], [-284, 430], [-256, 412], [-240, 392], [-230, 372], [-225, 365], [-223, 361], [-216, 355], [-204, 342], [-197, 332], [-190, 309], [-184, 295], [-181, 289], [-180, 288], [-178, 282], [-176, 280], [-176, 279], [-176, 278], [-176, 278], [-176, 278], [-176, 278], [-176, 278], [-176, 279], [-176, 281], [-176, 281], [-176, 283], [-176, 285], [-176, 286], [-176, 289], [-176, 291], [-176, 302], [-176, 328], [-176, 347], [-174, 364], [-174, 378], [-174, 385], [-172, 418], [-172, 449], [-172, 460], [-172, 477], [-171, 491], [-169, 506], [-169, 508], [-169, 508], [-169, 508], [-169, 508], [-169, 508], [-169, 508], [-169, 508], [-169, 507], [-169, 507], [-169, 507], [-169, 507], [-169, 507], [-169, 506], [-169, 506], [-169, 506], [-169, 506], [-169, 505], [-169, 505], [-169, 505], [-169, 505], [-169, 505], [-169, 505], [-148, 473], [-148, 473], [-148, 473], [-148, 473], [-148, 473], [-148, 473], [-148, 473], [-148, 473], [-148, 473], [-140, 473], [-133, 473], [-119, 473], [-104, 473], [-92, 472], [-86, 471], [-69, 470], [-58, 468], [-54, 466], [-50, 466], [-45, 464], [-43, 464], [-38, 463], [-36, 463], [-32, 462], [-26, 461], [-22, 458], [-22, 458], [-22, 457], [-22, 457], [-22, 457], [-22, 457], [-23, 457], [-25, 458], [-31, 460], [-32, 461], [-35, 463], [-43, 465], [-55, 468], [-59, 468], [-70, 471], [-78, 471], [-81, 472], [-82, 473], [-84, 473], [-84, 474], [-85, 474], [-85, 474], [-85, 474], [-85, 474], [-85, 474], [-85, 474], [-85, 473], [-85, 471], [-84, 469], [-84, 469], [-84, 467], [-84, 464], [-84, 456], [-84, 453], [-84, 445], [-84, 433], [-84, 409], [-84, 405], [-84, 399], [-84, 393], [-84, 391], [-86, 383], [-86, 379], [-86, 373], [-86, 369], [-86, 368], [-86, 363], [-86, 360], [-86, 358], [-87, 355], [-87, 352], [-87, 348], [-88, 342], [-88, 335], [-88, 331], [-89, 326], [-89, 322], [-89, 318], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-90, 316], [-92, 307], [-92, 303], [-92, 299], [-92, 299], [-92, 299], [-92, 299], [-92, 299], [-92, 298], [-92, 297], [-92, 296], [-92, 295], [-93, 295], [-94, 295], [-95, 295], [-98, 295], [-104, 295], [-108, 295], [-113, 295], [-117, 295], [-119, 295], [-124, 295], [-126, 294], [-127, 294], [-129, 294], [-129, 294], [-130, 294], [-130, 294], [-130, 294], [-129, 294], [-127, 294], [-124, 294], [-122, 294], [-117, 294], [-115, 294], [-111, 294], [-107, 294], [-102, 294], [-98, 294], [-90, 294], [-86, 294], [-84, 294], [-83, 294], [-78, 294], [-69, 294], [-65, 294], [-59, 295], [-55, 295], [-52, 295], [-49, 295], [-46, 295], [-46, 295], [-46, 295], [-46, 295], [-46, 295], [-46, 295], [-46, 295], [-46, 295], [-46, 295], [-48, 294], [-48, 294], [-48, 294], [-48, 294], [38, 470], [40, 463], [40, 462], [41, 457], [42, 455], [42, 453], [43, 450], [43, 444], [43, 437], [43, 423], [43, 414], [43, 410], [42, 391], [42, 382], [42, 373], [41, 367], [40, 361], [40, 357], [39, 348], [39, 339], [39, 337], [39, 329], [39, 325], [39, 321], [39, 316], [39, 312], [39, 311], [39, 307], [39, 302], [39, 301], [39, 301], [39, 301], [39, 301], [39, 304], [39, 307], [39, 316], [39, 321], [39, 327], [39, 336], [39, 345], [41, 357], [42, 370], [44, 377], [44, 381], [45, 394], [47, 401], [50, 406], [51, 408], [52, 411], [53, 412], [55, 414], [56, 414], [56, 414], [57, 414], [57, 414], [57, 414], [57, 414], [57, 413], [57, 413], [57, 413], [57, 413], [57, 413], [57, 413], [58, 415], [59, 418], [64, 430], [71, 439], [74, 442], [76, 445], [77, 446], [79, 449], [84, 456], [88, 465], [89, 465], [89, 465], [89, 464], [88, 460], [87, 456], [85, 452], [82, 449], [79, 443], [74, 436], [65, 411], [54, 396], [45, 384], [42, 373], [42, 372], [42, 372], [42, 372], [42, 372], [42, 372], [42, 372], [42, 372], [42, 372], [42, 372], [42, 372], [45, 375], [46, 376], [51, 377], [58, 375], [65, 374], [77, 365], [91, 355], [97, 352], [105, 348], [110, 346], [118, 343], [125, 342], [141, 335], [146, 333], [146, 333], [146, 333], [146, 333], [146, 333], [146, 332], [146, 332], [146, 332], [147, 332], [147, 332], [147, 332], [147, 332], [147, 332], [147, 332], [147, 332], [147, 332]]
  c = calculateDFT(a,381)
  console.log(c)
  */
  t=0
  height = 700;
  width = 1500;
  origin  =  [width/2,height/2+200]
  canvasa = createCanvas(width,height)
  canvasa.position(10,30)
  extraCanvas = createGraphics(width,height)
  extraCanvas.clear()
   background(0);
}

function draw() {
  if(drawMode){
    userDrawing() 
  } 
  else{
    drawFourier()
  }
}

function toggleDrawMode() {
  drawMode = !drawMode
  extraCanvas.clear();
  if(drawMode === false){
    c = calculateDFT(a,parseInt(a.length/2))
  }
  else{
    background(0);
    a=[]
  }
}

function userDrawing(){
  if(mouseIsPressed && mouseY>0){
        stroke(255,200,150)
        strokeWeight(3)
        line(mouseX,mouseY,pmouseX, pmouseY)
        a.push([mouseX-origin[0],origin[1]-mouseY])
  }
}

function drawFourier(){
  background(0);
  c=timeLapse(c,t)
  let v0 = origin;
  c.forEach((ci,index,arr)=>{
    let v1 = [v0[0]+ci[0],v0[1]-ci[1]]
    drawArrow(createVector(...v0),  createVector(...v1), 'white');
    if(index===arr.length-1){
      extraCanvas.stroke(255,0,100)
      extraCanvas.strokeWeight(3)
      extraCanvas.point(v1[0],v1[1])
    }
    v0 = v1;
  })
  noStroke();
  image(extraCanvas,0,0)
}

function calculateDFT(a,n){
  var ans = []
  for(let i=0;i<n;i++){
    var localSumPos = [0,0]
    var localSumNeg = [0,0]
    for(let j=0;j<a.length;j++){
        localSumPos = complexAdd(localSumPos,complexMul(a[j],[Math.cos(6.28*j*i/a.length),Math.sin(6.28*j*i/a.length)]))
        localSumNeg = complexAdd(localSumNeg,complexMul(a[j],[Math.cos(6.28*j*i/a.length),-Math.sin(6.28*j*i/a.length)]))
    }
    ans.push([localSumPos[0]/a.length,localSumPos[1]/a.length])
    ans.push([localSumNeg[0]/a.length,localSumNeg[1]/a.length])
  }
  return ans.slice(1,ans.length)
}

function complexAdd(a1,a2){
  var a3 = [a1[0]+a2[0],a1[1]+a2[1]]
  return a3
}

function complexMul(m1,m2){
  var real = m1[0]*m2[0] - m1[1]*m2[1]
  var imag = m1[0]*m2[1] + m1[1]*m2[0]
  return [real,imag]
}

function timeLapse(c,t) {
  c.forEach((ci,index)=>{
    let tempVec=createVector(...ci)
    let i = index%2 ? (index+1)/2 : -1*(index/2)
    tempVec.rotate(i*0.01)
    c[index]=[tempVec.x,tempVec.y]
  })
  return c;
}

function drawArrow(base, vec, myColor) {
  push();
  stroke(myColor);
  strokeWeight(1);
  fill(myColor);
  line(base.x, base.y, vec.x, vec.y);
  stroke(100,100,100);
  strokeWeight(1);
  noFill();
  circle(base.x, base.y,2*base.dist(vec))
  pop();
}